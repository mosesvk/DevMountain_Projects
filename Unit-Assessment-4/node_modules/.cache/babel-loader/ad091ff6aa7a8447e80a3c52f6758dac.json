{"ast":null,"code":"var _jsxFileName = \"/Users/mosesvk/Documents/DevMountain/Personal Projects/JS-Projects/React-Order-Website/src/components/Products/index.js\";\nimport React from 'react';\nimport { ProductsContainer, ProductsWrapper, ProductTitle, ProductCard, ProductImg, ProductInfo, ProductDesc, ProductPrice, ProductButton } from './ProductElements';\nimport Sidebar from '../Sidebar';\nimport { productData } from './data';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Products = () => {\n  var _s = $RefreshSig$();\n\n  const Hero = () => {\n    _s();\n\n    const [isOpen, setIsOpen] = useState(false); //This has to be an array. A little different from destructuring where you would use curly brackets\n\n    const toggle = () => {\n      setIsOpen(!isOpen); //We DON'T want it to be open to begin with that's why we put !isOpen\n    };\n  };\n\n  _s(Hero, \"+sus0Lb0ewKHdwiUhiTAJFoFyQ0=\");\n\n  return /*#__PURE__*/_jsxDEV(ProductsContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      toggle: toggle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Sidebar, {\n      isOpen: isOpen,\n      toggle: toggle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProductsWrapper, {\n      children: productData.map((prod, index) => {\n        return /*#__PURE__*/_jsxDEV(ProductCard, {\n          children: [/*#__PURE__*/_jsxDEV(ProductImg, {\n            src: prod.img,\n            alt: prod.alt\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ProductInfo, {\n            children: [/*#__PURE__*/_jsxDEV(ProductTitle, {\n              children: prod.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ProductDesc, {\n              children: prod.desc\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ProductPrice, {\n              children: prod.price\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ProductButton, {\n              children: productData.button\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Products;\nexport default Products;\n\nvar _c;\n\n$RefreshReg$(_c, \"Products\");","map":{"version":3,"sources":["/Users/mosesvk/Documents/DevMountain/Personal Projects/JS-Projects/React-Order-Website/src/components/Products/index.js"],"names":["React","ProductsContainer","ProductsWrapper","ProductTitle","ProductCard","ProductImg","ProductInfo","ProductDesc","ProductPrice","ProductButton","Sidebar","productData","Products","Hero","isOpen","setIsOpen","useState","toggle","map","prod","index","img","alt","name","desc","price","button"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,iBADF,EAEEC,eAFF,EAGEC,YAHF,EAIEC,WAJF,EAKEC,UALF,EAMEC,WANF,EAOEC,WAPF,EAQEC,YARF,EASEC,aATF,QAUO,mBAVP;AAWA,OAAOC,OAAP,MAAoB,YAApB;AACA,SAASC,WAAT,QAA4B,QAA5B;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAErB,QAAMC,IAAI,GAAG,MAAM;AAAA;;AACjB,UAAM,CAACC,MAAD,EAASC,SAAT,IAAsBC,QAAQ,CAAC,KAAD,CAApC,CADiB,CAEX;;AACN,UAAMC,MAAM,GAAG,MAAM;AACnBF,MAAAA,SAAS,CAAC,CAACD,MAAF,CAAT,CADmB,CACA;AACpB,KAFD;AAGD,GAND;;AAFqB,KAEfD,IAFe;;AAUrB,sBACE,QAAC,iBAAD;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,MAAM,EAAEI;AAAhB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,OAAD;AAAS,MAAA,MAAM,EAAEH,MAAjB;AAAyB,MAAA,MAAM,EAAEG;AAAjC;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,eAAD;AAAA,gBACGN,WAAW,CAACO,GAAZ,CAAgB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAChC,4BACE,QAAC,WAAD;AAAA,kCACE,QAAC,UAAD;AAAY,YAAA,GAAG,EAAED,IAAI,CAACE,GAAtB;AAA2B,YAAA,GAAG,EAAEF,IAAI,CAACG;AAArC;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,WAAD;AAAA,oCACE,QAAC,YAAD;AAAA,wBAAeH,IAAI,CAACI;AAApB;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,WAAD;AAAA,wBAAcJ,IAAI,CAACK;AAAnB;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE,QAAC,YAAD;AAAA,wBAAeL,IAAI,CAACM;AAApB;AAAA;AAAA;AAAA;AAAA,oBAHF,eAIE,QAAC,aAAD;AAAA,wBAAgBd,WAAW,CAACe;AAA5B;AAAA;AAAA;AAAA;AAAA,oBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA,WAAkBN,KAAlB;AAAA;AAAA;AAAA;AAAA,gBADF;AAWD,OAZA;AADH;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CA/BD;;KAAMR,Q;AAiCN,eAAeA,QAAf","sourcesContent":["import React from 'react';\nimport {\n  ProductsContainer,\n  ProductsWrapper,  \n  ProductTitle,\n  ProductCard,\n  ProductImg,\n  ProductInfo,\n  ProductDesc,\n  ProductPrice,\n  ProductButton\n} from './ProductElements';\nimport Sidebar from '../Sidebar';\nimport { productData } from './data';\n\nconst Products = () => {\n\n  const Hero = () => {\n    const [isOpen, setIsOpen] = useState(false) \n          //This has to be an array. A little different from destructuring where you would use curly brackets\n    const toggle = () => {\n      setIsOpen(!isOpen) //We DON'T want it to be open to begin with that's why we put !isOpen\n    }\n  }\n\n  return (\n    <ProductsContainer>\n      <Navbar toggle={toggle}/>\n      <Sidebar isOpen={isOpen} toggle={toggle} />\n      <ProductsWrapper>\n        {productData.map((prod, index) => {\n          return (\n            <ProductCard key={index}>\n              <ProductImg src={prod.img} alt={prod.alt}/>\n              <ProductInfo>\n                <ProductTitle>{prod.name}</ProductTitle>\n                <ProductDesc>{prod.desc}</ProductDesc>\n                <ProductPrice>{prod.price}</ProductPrice>\n                <ProductButton>{productData.button}</ProductButton>\n              </ProductInfo>\n            </ProductCard>\n          )\n        })}\n      </ProductsWrapper>\n    </ProductsContainer>\n  )\n}\n\nexport default Products\n"]},"metadata":{},"sourceType":"module"}