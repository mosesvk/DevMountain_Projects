{"ast":null,"code":"var _jsxFileName = \"/Users/mosesvk/Documents/DevMountain/Personal-Projects/noDB-project-1/src/components/Products/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { ProductsContainer, ProductsWrapper, ProductTitle, ProductCard, ProductImg, ProductInfo, ProductDesc, ProductPrice, ProductButton } from './ProductElements';\nimport Sidebar from '../Sidebar';\nimport Navbar from '../Navbar';\nimport img from '../../images/CFP-counter.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Products = props => {\n  _s();\n\n  const {\n    addItem,\n    data,\n    cart,\n    editItem,\n    removeItem\n  } = props;\n  const [total, setTotal] = useState();\n  const [isOpen, setIsOpen] = useState(false); //This has to be an array. useState is always returns an array with 2 values. -1st value is the current state. -2nd value is a FUNCTION that will UPDATE the current state (1st value)\n\n  const notify = () => toast(\"Item added to Cart\");\n\n  useEffect(() => {\n    //useEffect \n    const total = cart.reduce((acc, product) => {\n      return Math.round(100 * (acc + product.price * product.quantity)) / 100;\n    }, 0); // console.log(total)\n\n    setTotal(total);\n  }, [cart]);\n\n  const toggle = () => {\n    setIsOpen(!isOpen); //We DON'T want it to be open to begin with that's why we put !isOpen\n  }; // console.log(props.data)\n\n\n  console.log(cart + \"in products/index.js\");\n  return /*#__PURE__*/_jsxDEV(ProductsContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      toggle: toggle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Sidebar, {\n      removeItem: removeItem,\n      total: total,\n      editItem: editItem,\n      cart: cart,\n      isOpen: isOpen,\n      toggle: toggle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProductsWrapper, {\n      children: data.map((prod, index) => {\n        //Deconstructure prod (data array)\n        const {\n          name,\n          desc,\n          price,\n          button\n        } = prod;\n        return /*#__PURE__*/_jsxDEV(ProductCard, {\n          children: [/*#__PURE__*/_jsxDEV(ProductImg, {\n            src: img,\n            alt: prod.alt\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ProductInfo, {\n            children: [/*#__PURE__*/_jsxDEV(ProductTitle, {\n              children: name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ProductDesc, {\n              children: desc\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ProductPrice, {\n              children: [\"$ \", price]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ProductButton, {\n              onClick: () => {\n                addItem(name, price, 1);\n                notify();\n              },\n              children: button\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Products, \"WU+sZr9ESdcYntEi6ACBgP2dnfA=\");\n\n_c = Products;\nexport default Products;\n\nvar _c;\n\n$RefreshReg$(_c, \"Products\");","map":{"version":3,"sources":["/Users/mosesvk/Documents/DevMountain/Personal-Projects/noDB-project-1/src/components/Products/index.js"],"names":["React","useState","useEffect","ToastContainer","toast","ProductsContainer","ProductsWrapper","ProductTitle","ProductCard","ProductImg","ProductInfo","ProductDesc","ProductPrice","ProductButton","Sidebar","Navbar","img","Products","props","addItem","data","cart","editItem","removeItem","total","setTotal","isOpen","setIsOpen","notify","reduce","acc","product","Math","round","price","quantity","toggle","console","log","map","prod","index","name","desc","button","alt"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport {\n  ProductsContainer,\n  ProductsWrapper,  \n  ProductTitle,\n  ProductCard,\n  ProductImg,\n  ProductInfo,\n  ProductDesc,\n  ProductPrice,\n  ProductButton\n} from './ProductElements';\nimport Sidebar from '../Sidebar';\nimport Navbar from '../Navbar'\nimport img from '../../images/CFP-counter.jpg'\n\nconst Products = (props) => {\n\n  const {addItem, data, cart, editItem, removeItem} = props;\n\n  const [total, setTotal] = useState()\n  const [isOpen, setIsOpen] = useState(false) \n          //This has to be an array. useState is always returns an array with 2 values. -1st value is the current state. -2nd value is a FUNCTION that will UPDATE the current state (1st value)\n\n  const notify = () => toast(\"Item added to Cart\")\n\n  useEffect(() => {\n    //useEffect \n    const total = cart.reduce((acc, product) => {\n      return Math.round(100 * (acc + (product.price * product.quantity)))/100\n    }, 0)\n    // console.log(total)\n    setTotal(total)\n  }, [cart])\n  \n\n  const toggle = () => {\n      setIsOpen(!isOpen) //We DON'T want it to be open to begin with that's why we put !isOpen\n    }\n  \n  // console.log(props.data)\n  console.log(cart + \"in products/index.js\")\n\n  return (\n    <ProductsContainer>\n      <Navbar toggle={toggle}/>\n      <Sidebar removeItem={removeItem} total={total} editItem={editItem} cart={cart} isOpen={isOpen} toggle={toggle} />\n      <ProductsWrapper>\n        {data.map((prod, index) => {\n          //Deconstructure prod (data array)\n          const {name, desc, price, button} = prod;\n          return (\n            <ProductCard key={index}>\n              <ProductImg src={img} alt={prod.alt}/>\n              <ProductInfo>\n                <ProductTitle>{name}</ProductTitle>\n                <ProductDesc>{desc}</ProductDesc>\n                <ProductPrice>$ {price}</ProductPrice>\n                <ProductButton onClick={() => {addItem(name, price, 1); notify()}}>{button}</ProductButton>\n                <ToastContainer />\n              </ProductInfo>\n            </ProductCard>\n          )\n        })}\n      </ProductsWrapper>\n    </ProductsContainer>\n  )\n}\n\nexport default Products\n"]},"metadata":{},"sourceType":"module"}